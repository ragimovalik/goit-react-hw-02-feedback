{"version":3,"sources":["components/StatisticsTableItem/StatisticsTableItem.module.css","components/Section/Section.module.css","components/PageTitle/PageTitle.module.css","components/StatisticsTable/StatisticsTable.module.css","components/Button/Button.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/PageTitle/PageTitle.jsx","components/Section/Section.jsx","components/StatisticsTableItem/StatisticsTableItem.jsx","components/StatisticsTable/StatisticsTable.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","App.js","index.js"],"names":["module","exports","PageTitle","title","className","styles","Section","children","Section__title","StatisticsTableItem","ratingBlock","Stats__item","Stats__name","Stats__digit","StatisticsTable","good","bad","neutral","positivePercentage","total","ratingArr","Object","entries","sectionShow","style","opacity","map","bgcSetter","name","Button","btnText","onLeaveFeedback","backgroundColor","onClick","FeedbackOptions","options","Buttons","btnName","App","state","nameOf","this","setState","prevState","values","reduce","acc","num","percentageCounter","countTotalFeedback","Math","floor","buttonsNames","keys","countPositiveFeedbackPercentage","event","target","textContent","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.213d0bc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Stats__item\":\"StatisticsTableItem_Stats__item__2mhGF\",\"Stats__name\":\"StatisticsTableItem_Stats__name__27GpR\",\"Stats__digit\":\"StatisticsTableItem_Stats__digit__11-kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__OCPJ_\",\"Section__title\":\"Section_Section__title__2On4t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageTitle\":\"PageTitle_PageTitle__i3W39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Stats__list\":\"StatisticsTable_Stats__list__1VINS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__qBbis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Buttons\":\"FeedbackOptions_Buttons__2ORXG\"};","import PropTypes from 'prop-types';\nimport styles from './PageTitle.module.css';\n\nconst PageTitle = ({ title }) => {\n  return <h1 className={styles.PageTitle}>{title}</h1>;\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default PageTitle;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.Section}>\n      <h3 className={styles.Section__title}>{title}</h3>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport styles from './StatisticsTableItem.module.css';\n\nconst StatisticsTableItem = ({ ratingBlock }) => {\n  return (\n    <li className={styles.Stats__item}>\n      <div className={styles.Stats__name}>\n        {ratingBlock[0] === 'positivePercentage'\n          ? 'Positive Feedback (%)'\n          : ratingBlock[0]}\n        <span className={styles.Stats__digit}>{ratingBlock[1]}</span>\n      </div>\n    </li>\n  );\n};\n\nStatisticsTableItem.propTypes = {\n  ratingBlock: PropTypes.array.isRequired,\n};\n\nexport default StatisticsTableItem;\n","import PropTypes from 'prop-types';\nimport StatisticsTableItem from '../StatisticsTableItem/StatisticsTableItem';\nimport styles from './StatisticsTable.module.css';\n\nconst StatisticsTable = ({\n  good,\n  bad,\n  neutral,\n  positivePercentage = 0,\n  total,\n}) => {\n  const ratingArr = Object.entries({\n    good,\n    bad,\n    neutral,\n    total,\n    positivePercentage,\n  });\n  const sectionShow = total ? 1 : 0;\n\n  return (\n    <ul style={{ opacity: sectionShow }} className={styles['Stats__list']}>\n      {ratingArr.map(ratingBlock => (\n        <StatisticsTableItem ratingBlock={ratingBlock} key={ratingBlock[0]} />\n      ))}\n    </ul>\n  );\n};\n\nStatisticsTable.propTypes = {\n  rating: PropTypes.arrayOf(PropTypes.string.isRequired),\n};\n\nexport default StatisticsTable;\n","import PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nconst bgcSetter = name => {\n  switch (name) {\n    case 'good':\n      return '#1496bb';\n\n    case 'neutral':\n      return '#f26d21';\n\n    case 'bad':\n      return '#cd594a';\n\n    default:\n      return 'ligthgray';\n  }\n};\n\nconst Button = ({ btnText, onLeaveFeedback }) => (\n  <button\n    style={{ backgroundColor: bgcSetter(btnText) }}\n    className={styles.Button}\n    onClick={onLeaveFeedback}\n  >\n    {btnText}\n  </button>\n);\n\nButton.propTypes = {\n  btnText: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={styles.Buttons}>\n      {options.map(btnName => (\n        <Button\n          key={btnName}\n          btnText={btnName}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React, { Component } from 'react';\nimport PageTitle from './components/PageTitle/PageTitle';\nimport Section from './components/Section/Section';\nimport StatisticsTable from './components/StatisticsTable/StatisticsTable';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback(nameOf) {\n    return this.setState(prevState => ({\n      [nameOf]: prevState[nameOf] + 1,\n    }));\n  }\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, num) => num + acc, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Object.values(this.state).reduce((acc, num) => {\n      const percentageCounter =\n        (this.state.good / this.countTotalFeedback()) * 100;\n      return Math.floor(percentageCounter) || null;\n    }, 0);\n  }\n\n  render() {\n    const buttonsNames = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <PageTitle title={'Cafe Xpresso at the TrainStation'} />\n\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={buttonsNames}\n            onLeaveFeedback={event => {\n              return this.onLeaveFeedback(event.target.textContent);\n            }}\n          />\n        </Section>\n\n        <Section title={'Statistics'}>\n          <StatisticsTable\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n/*\n    // Object for props\n    const statObj = {\n      ...this.state,\n      totalFeedback: this.countTotalFeedback(),\n      totalPositiveFeedback: this.countPositiveFeedbackPercentage(),\n    };\n    //USAGE in Render \n    <StatisticsTable rating={statObj} />\n    */\n\n/*\n        {total > 0 ? (\n          <Section title={'Statistics'}>\n            <StatisticsTable\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          </Section>\n        ) : null}\n\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}